#
#  _____               _               
# |__  /   _ _ __ ___ | |__  _ __ ___  
#   / / | | | '_ ` _ \| '_ \| '__/ _ \ 
#  / /| |_| | | | | | | |_) | | | (_) |
# /____\__,_|_| |_| |_|_.__/|_|  \___/ 
#
#

# Programming Language
# Tell Zumbro which language you
# want to check for code quality tools
# Zumbro currently supports: python 
language: python

# pre-commit: a framework for managing multi-language pre-commit hooks
# https://pre-commit.com/
# For Zumbro to work, you must have enable_precommit set to true.
enable_precommit: true

# isort: isort your imports, so that you don't have to
# https://pycqa.github.io/isort/
enable_isort: true

# black: the uncompromising Python code formatter
# https://github.com/psf/black
enable_black: true

# ruff: an extremely fast Python linter and formatter, written in Rust.
# https://github.com/astral-sh/ruff
enable_ruff: true



# HOW TO USE THIS CONFIGURATION FILE

# 1. Copy this file to the root of your repository as .zumbro/config.yaml
# 2. Enable pre-commit above; Zumbro enforces engineering standards
#    on new commits with pre-commit.
# 3. Enable your preferred tools above.
#    Zumbro currently supports: isort, black, ruff, bandit.
# 4. Add / edit this Zumbro config file via pull request; 
#   Do not merge directly to main.

# We want to hear your feedback on which features to prioritize.
# Potential options: other linters, other languages, other CI tools.

# Any questions or roadblocks? Email us at support@caparra.ai. 
# Our goal is to make Zumbro the most valuable app in your tech stack.
         